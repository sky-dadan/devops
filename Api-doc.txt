Api调用说明文档

一：共用部分
    用户登录验证
    s = util.get_validate('liuziping', '123456')  
    
    请求头
    headers = {'Authorization': s,'content-type': 'application/json'}
    
    创建和更新提交的参数数据。username，name,email，mobile
    data = {"username": "sa", "email": "sap@123.com", "mobile": "222543210000", "name": "sa"}

一：用户操作api
1: 管理员创建用户

    url = "http://192.168.1.243:1000/api/user" 
    r = requests.post(url, headers=headers,data=json.dumps(data)) 

2.1：管理员查看所有用户列表

    默认查看id前10的用户列表。
    url = "http://192.168.1.243:1000/api/user?list=true" 
    
    自定义查找区间（分页），offset查询开始的位置，size查询第三条，size不允许超过1000
    url = "http://192.168.1.243:1000/api/user?offset=0&size=2&list=true" 
    r = requests.get(url, headers=headers)    

    备注：由于查看用户信息和查看用户列表都合并写到了同一个get请求。管理员登陆后，就有两个权限，查询自己的信息还是查询用户列表的信息。为了明确需求。如果管理员登陆且要查看用户列表，必须额外传入一个参数list=true.两个条件同时满足才会返回用户列表，否则返回管理员的个人信息

2.2：用户和管理员查看自己信息(通过user登录时候的信息实现where查询条件)

        url = "http://192.168.1.243:1000/api/user"  
        r = requests.get(url, headers=headers)    

3.1：管理员更新,删除某个用户信息(依据用户id实现where查询条件)
    
   
    data = {"username": "sa", "email": "sap@123.com", "mobile": "222543210000", "name": "sa","user_id":7}
    url = "http://192.168.1.243:1000/api/user" 
    r = requests.delete(url, headers=headers) 
    r = requests.put(url, headers=headers,json=json.dumps(data))
   
3.2：用户自己更新信息

    data = {"username": "sa", "email": "sap@123.com", "mobile": "222543210000", "name": "sa"}
    url = "http://192.168.1.243:1000/api/user" 
    r = requests.put(url, headers=headers,json=json.dumps(data))
   
    
4.1：管理员修改用户密码

    data = {"password":"13456","user_id":1}
    url = "http://192.168.1.243:1000/api/password" 
    r = requests.put(url, headers=headers,json=json.dumps(data))

4.2：用户自己修改密码

    data = {"oldpassword":"123456", "password":"13456"}
    url = "http://192.168.1.243:1000/api/password"   
    r = requests.put(url, headers=headers,json=json.dumps(data))

5：修改用户角色

    data = {"role":1}
    url = "http://192.168.1.243:1000/api/role/user_id" 
    r = requests.put(url, headers=headers,json=json.dumps(data))

6.1: 管理员查看用户锁定状态

    url = "http://192.168.1.243:1000/api/lockuser/<user_id>"
    r = requests.get(url,headers=headers)

6.2: 管理员解除，锁定用户

    data = {"is_lock":0} 解除锁定
    data = {"is_lock":1} 锁定
    url = "http://192.168.1.243:1000/api/lockuser/<user_id>"
    r = requests.put(url,headers=headers,json=json.dumps(data))

6.3:管理员批量锁定用户

    data = {"users":['jack','rose']}
    url = "http://192.168.1.243:1000/api/lockuser"    
    r = requests.put(url,headers=headers,json=json.dumps(data))

7.1:  管理员查看组列表

    url = "http://192.168.1.243:1000/api/group?offset=0&size=2"
    r = requests.get(url,headers=headers)

7.2: 管理员创建组

    data = {'name':'sa','name_cn':'guanliyuan','comment':'Test','users':['zhangxunan','lisi']}
    url = "http://192.168.1.243:1000/api/group"
    r = requests.post(url,headers=headers,json=json.dumps(data))

7.3: 管理员删除组
	data = {'name':['test2','test1']}
    url = "http://192.168.1.243:1000/api/group"
    r = requests.delete(url,headers=headers,json=json.dumps(data))    


7.4：管理员查看组详情

    url = "http://192.168.1.243:1000/api/group_detail/<gid>"
    r = requests.get(url,headers=headers)

